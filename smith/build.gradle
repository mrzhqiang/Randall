apply plugin: 'com.android.library'

android {
  compileSdkVersion 26

  defaultConfig {
    minSdkVersion 19
    targetSdkVersion 26
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])

  implementation 'com.android.support:appcompat-v7:26.1.0'
  testImplementation 'junit:junit:4.12'
  androidTestImplementation 'com.android.support.test:runner:1.0.1'
  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

  // 依赖注入框架
  implementation 'com.google.dagger:dagger:2.10'
  annotationProcessor 'com.google.dagger:dagger-compiler:2.10'

  // 数据库框架
  implementation 'com.squareup.sqlbrite:sqlbrite:1.1.1'

  // 网络框架
  implementation 'com.squareup.retrofit2:retrofit:2.3.0'
  implementation 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
  // 网络请求日志
  implementation 'com.squareup.okhttp3:logging-interceptor:3.8.1'

  // 图片加载框架
  api 'com.squareup.picasso:picasso:2.5.2'
  implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'

  // 一个对于构成使用的Java虚拟机观察序列异步和基于事件的程序库
  api 'io.reactivex:rxandroid:1.2.1'
  api 'io.reactivex:rxjava:1.3.0'

  // 自动值
  implementation 'com.google.auto.value:auto-value:1.5.2'
  annotationProcessor 'com.google.auto.value:auto-value:1.5.2'
  implementation 'com.ryanharter.auto.value:auto-value-parcel-adapter:0.2.5'
  annotationProcessor 'com.ryanharter.auto.value:auto-value-parcel:0.2.5'

  // 简单的调试日志工具
  api 'com.github.mrzhqiang:debug-log:1.1'
  // 常用的开发辅助工具
  api 'com.github.mrzhqiang:helper:1.2.1'

  // 网页内容解析器/装饰器
  implementation 'org.jsoup:jsoup:1.11.2'
}

// github路径即可
group='com.github.mrzhqiang'

// 指定编码
tasks.withType(JavaCompile) {
  options.encoding = "UTF-8"
}

// 生成源文件
task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}

// 生成Javadoc文档
task javadoc(type: Javadoc) {
  failOnError  false
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
  classpath += configurations.compile
}

// 文档打包成jar
task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives javadocJar
}

//javadoc {
//    options{
//        //如果你的项目里面有中文注释的话，必须将格式设置为UTF-8，不然会出现乱码
//        encoding "UTF-8"
//        charSet 'UTF-8'
//        author true
//        version true
//        links "http://docs.oracle.com/javase/7/docs/api"
//    }
//}